{"body": "<div class=\"section\" id=\"version-reporting\">\n<h1>Version Reporting<a class=\"headerlink\" href=\"#version-reporting\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"what-problem-does-this-pattern-solve\">\n<h2>What problem does this pattern solve?<a class=\"headerlink\" href=\"#what-problem-does-this-pattern-solve\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<a name=\"fb7f73bd2bf8e3d65a470d742364d15c26b99ef3\"></a><p class=\"cn\" id=\"fb7f73bd2bf8e3d65a470d742364d15c26b99ef3\">It provides a flexible method of recording and reporting your application&#8217;s version.</p>\n</div>\n<div class=\"section\" id=\"when-to-use-it\">\n<h2>When to use it<a class=\"headerlink\" href=\"#when-to-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<a name=\"e2e66eff5eabd07cc731a2f85c0778c67d08ceec\"></a><p class=\"cn\" id=\"e2e66eff5eabd07cc731a2f85c0778c67d08ceec\">You should use it with any application or project that has specific releases.</p>\n</div>\n<div class=\"section\" id=\"why-should-i-use-it\">\n<h2>Why should I use it?<a class=\"headerlink\" href=\"#why-should-i-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ol class=\"arabic simple\">\n<li><a name=\"8491be348859a869255ee2ea3e303c5ba8cddeea\"></a><p class=\"first cn\" id=\"8491be348859a869255ee2ea3e303c5ba8cddeea\">It is easy to see which version is currently installed somewhere.</p>\n</li>\n<li><a name=\"d74b4e57daa3962d30748a6df16b7700b7a3df19\"></a><p class=\"first cn\" id=\"d74b4e57daa3962d30748a6df16b7700b7a3df19\">It is easy to import the version into other places, like documentation or packaging.</p>\n</li>\n<li><a name=\"554b4ae6fc5c3a3d6901d4c7a9f1e062b5cd781c\"></a><p class=\"first cn\" id=\"554b4ae6fc5c3a3d6901d4c7a9f1e062b5cd781c\">It is easy for others to test the version of your code to better handle backwards-compatibility.</p>\n</li>\n</ol>\n</div>\n<div class=\"section\" id=\"how-to-use-it\">\n<h2>How to use it<a class=\"headerlink\" href=\"#how-to-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<a name=\"ccc8209bb9c445c553eec5ae9a221860e06346aa\"></a><p class=\"cn\" id=\"ccc8209bb9c445c553eec5ae9a221860e06346aa\"><a class=\"reference external\" href=\"http://www.python.org/dev/peps/pep-0386/#the-new-versioning-algorithm\">PEP 386</a> defines the standard way to specify versions within the Python community. The most common scenario is the <tt class=\"docutils literal\"><span class=\"pre\">Major.Minor.Micro</span></tt> with a possible <tt class=\"docutils literal\"><span class=\"pre\">alpha/beta/release</span> <span class=\"pre\">candidate</span></tt> suffix.</p>\n<a name=\"2de40fe2087fb98ddebb19a3ae7fb00fea57654a\"></a><p class=\"cn\" id=\"2de40fe2087fb98ddebb19a3ae7fb00fea57654a\">Examples:</p>\n<div class=\"highlight-python\"><pre>1.0\n0.6.1\n2.1.1b1\n0.3rc2</pre>\n</div>\n<a name=\"cf58c1b3a6c755d9996a403799a605f3cf440318\"></a><p class=\"cn\" id=\"cf58c1b3a6c755d9996a403799a605f3cf440318\">When recording your version number you should:</p>\n<ul class=\"simple\">\n<li><a name=\"4557f7be5cde9690eb728ba79cb01099227ae77b\"></a><p class=\"first cn\" id=\"4557f7be5cde9690eb728ba79cb01099227ae77b\">Put it within the code, so it&#8217;s accessible after the package is installed</p>\n</li>\n<li><a name=\"294dea444a38590f0e45cb4aafbaf6d91c1c2024\"></a><p class=\"first cn\" id=\"294dea444a38590f0e45cb4aafbaf6d91c1c2024\">Easily retrieve all the individual parts of the version</p>\n</li>\n<li><a name=\"b89f094fd5b26b2ec393f51f64f4ab456a98b94e\"></a><p class=\"first cn\" id=\"b89f094fd5b26b2ec393f51f64f4ab456a98b94e\">Record the individual version parts as integers (where appropriate) for easy comparison</p>\n</li>\n<li><a name=\"be882dc3caa86d36c4e42fd2d51e123133985ddb\"></a><p class=\"first cn\" id=\"be882dc3caa86d36c4e42fd2d51e123133985ddb\">Have a properly formatted string version available</p>\n</li>\n</ul>\n<a name=\"80005842a3b012a1c59431094af624121aa26050\"></a><p class=\"cn\" id=\"80005842a3b012a1c59431094af624121aa26050\">Putting the version information in your application&#8217;s <tt class=\"docutils literal\"><span class=\"pre\">__init__.py</span></tt> is a great, out-of-the-way place.</p>\n<a name=\"fe8b56fc7da22054c5b742777d3e6c29e9bb614d\"></a><p class=\"cn\" id=\"fe8b56fc7da22054c5b742777d3e6c29e9bb614d\">Here is an example that I use:</p>\n<dl class=\"docutils\">\n<dt><strong>coolapp/__index__.py</strong></dt>\n<dd><div class=\"first last highlight-python\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span class=\"n\">__version_info__</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s\">&#39;major&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;minor&#39;</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;micro&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;releaselevel&#39;</span><span class=\"p\">:</span> <span class=\"s\">&#39;final&#39;</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;serial&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_version</span><span class=\"p\">():</span>\n    <span class=\"n\">vers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">&quot;</span><span class=\"si\">%(major)i</span><span class=\"s\">.</span><span class=\"si\">%(minor)i</span><span class=\"s\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">__version_info__</span><span class=\"p\">,</span> <span class=\"p\">]</span>\n    \n    <span class=\"k\">if</span> <span class=\"n\">__version_info__</span><span class=\"p\">[</span><span class=\"s\">&#39;micro&#39;</span><span class=\"p\">]:</span>\n        <span class=\"n\">vers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">&quot;.</span><span class=\"si\">%(micro)i</span><span class=\"s\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">__version_info__</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">__version_info__</span><span class=\"p\">[</span><span class=\"s\">&#39;releaselevel&#39;</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s\">&#39;final&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">vers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">&#39;</span><span class=\"si\">%(releaselevel)s%(serial)i</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">__version_info__</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"s\">&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">vers</span><span class=\"p\">)</span>\n\n<span class=\"n\">__version__</span> <span class=\"o\">=</span> <span class=\"n\">get_version</span><span class=\"p\">()</span>\n</pre></div>\n</td></tr></table></div>\n</dd>\n</dl>\n<a name=\"7bbd207f83e0ec0fa3df3bf6b2cee94ddd9a4c03\"></a><p class=\"cn\" id=\"7bbd207f83e0ec0fa3df3bf6b2cee94ddd9a4c03\">This sets up a <tt class=\"docutils literal\"><span class=\"pre\">__version_info__</span></tt> dictionary to hold the version fields, a <tt class=\"docutils literal\"><span class=\"pre\">get_version()</span></tt> function to format the <tt class=\"docutils literal\"><span class=\"pre\">__version_info__</span></tt> into a string, and <tt class=\"docutils literal\"><span class=\"pre\">__version__</span></tt>, which is the formatted string version. It is similar to Django&#8217;s method:</p>\n<dl class=\"docutils\">\n<dt><strong>django/__init__.py</strong></dt>\n<dd><div class=\"first last highlight-python\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span class=\"n\">VERSION</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s\">&#39;alpha&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_version</span><span class=\"p\">():</span>\n    <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\">.</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n    <span class=\"k\">if</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span>\n        <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\">.</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n    <span class=\"k\">if</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:]</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"s\">&#39;alpha&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\"> pre-alpha&#39;</span> <span class=\"o\">%</span> <span class=\"n\">version</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s\">&#39;final&#39;</span><span class=\"p\">:</span>\n            <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">django.utils.version</span> <span class=\"kn\">import</span> <span class=\"n\">get_svn_revision</span>\n    <span class=\"n\">svn_rev</span> <span class=\"o\">=</span> <span class=\"n\">get_svn_revision</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">svn_rev</span> <span class=\"o\">!=</span> <span class=\"s\">u&#39;SVN-unknown&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">&quot;</span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s</span><span class=\"s\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">svn_rev</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">version</span>\n</pre></div>\n</td></tr></table></div>\n</dd>\n</dl>\n</div>\n</div>\n", "display_toc": true, "title": "Version Reporting", "sourcename": "app_construction/version_reporting.txt", "customsidebar": null, "current_page_name": "app_construction/version_reporting", "next": {"link": "../views_as_a_package/", "title": "Views as a package"}, "rellinks": [["genindex", "General Index", "I", "index"], ["app_construction/views_as_a_package", "Views as a package", "N", "next"], ["app_construction/index", "Application Construction", "P", "previous"]], "meta": {"author": "Corey Oordt"}, "parents": [{"link": "../", "title": "Application Construction"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Version Reporting</a><ul>\n<li><a class=\"reference internal\" href=\"#what-problem-does-this-pattern-solve\">What problem does this pattern solve?</a></li>\n<li><a class=\"reference internal\" href=\"#when-to-use-it\">When to use it</a></li>\n<li><a class=\"reference internal\" href=\"#why-should-i-use-it\">Why should I use it?</a></li>\n<li><a class=\"reference internal\" href=\"#how-to-use-it\">How to use it</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../", "title": "Application Construction"}, "metatags": ""}