{"body": "<div class=\"section\" id=\"version-reporting\">\n<h1>Version Reporting<a class=\"headerlink\" href=\"#version-reporting\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Author:</th><td class=\"field-body\"><a name=\"99abb9d970cec1f4679dc75c15c8de2f269d5def\"></a><p class=\"first last cn\" id=\"99abb9d970cec1f4679dc75c15c8de2f269d5def\">Corey Oordt</p>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"what-problem-does-this-pattern-solve\">\n<h2>What problem does this pattern solve?<a class=\"headerlink\" href=\"#what-problem-does-this-pattern-solve\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<a name=\"2d31f93fef8a2f33107188daad2ee52b9618d5ba\"></a><p class=\"cn\" id=\"2d31f93fef8a2f33107188daad2ee52b9618d5ba\">It provides a flexible method of recording and reporting your application's version.</p>\n</div>\n<div class=\"section\" id=\"when-to-use-it\">\n<h2>When to use it<a class=\"headerlink\" href=\"#when-to-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<a name=\"1b04655075b4c3b848e3b50108eb948f508ccfcc\"></a><p class=\"cn\" id=\"1b04655075b4c3b848e3b50108eb948f508ccfcc\">You should use it with any application or project that has specific releases.</p>\n</div>\n<div class=\"section\" id=\"why-should-i-use-it\">\n<h2>Why should I use it?<a class=\"headerlink\" href=\"#why-should-i-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ol class=\"arabic simple\">\n<li><a name=\"b7237567cbba2d3ee8d60a8146b1376e7f30701c\"></a><p class=\"first cn\" id=\"b7237567cbba2d3ee8d60a8146b1376e7f30701c\">It is easy to see which version is currently installed somewhere.</p>\n</li>\n<li><a name=\"d23386c54ff2b9edc6ae76fa0051d66e516501f9\"></a><p class=\"first cn\" id=\"d23386c54ff2b9edc6ae76fa0051d66e516501f9\">It is easy to import the version into other places, like documentation or packaging.</p>\n</li>\n<li><a name=\"34f07b98f49750d63aee9163de87bc2fc69173a5\"></a><p class=\"first cn\" id=\"34f07b98f49750d63aee9163de87bc2fc69173a5\">It is easy for others to test the version of your code to better handle backwards-compatibility.</p>\n</li>\n</ol>\n</div>\n<div class=\"section\" id=\"how-to-use-it\">\n<h2>How to use it<a class=\"headerlink\" href=\"#how-to-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<a name=\"28afb3df8b0802a38d7c00bca910cfad17b0aaa1\"></a><p class=\"cn\" id=\"28afb3df8b0802a38d7c00bca910cfad17b0aaa1\"><a class=\"reference external\" href=\"http://www.python.org/dev/peps/pep-0386/#the-new-versioning-algorithm\">PEP 386</a> defines the standard way to specify versions within the Python community. The most common scenario is the <tt class=\"docutils literal\"><span class=\"pre\">Major.Minor.Micro</span></tt> with a possible <tt class=\"docutils literal\"><span class=\"pre\">alpha/beta/release</span> <span class=\"pre\">candidate</span></tt> suffix.</p>\n<a name=\"d1055b2229b9438f816e8d70a643b2528dc80ad8\"></a><p class=\"cn\" id=\"d1055b2229b9438f816e8d70a643b2528dc80ad8\">Examples:</p>\n<div class=\"highlight-python\"><pre>1.0\n0.6.1\n2.1.1b1\n0.3rc2</pre>\n</div>\n<a name=\"76d8ce06192f03d24506325989d8ac65813ea8c8\"></a><p class=\"cn\" id=\"76d8ce06192f03d24506325989d8ac65813ea8c8\">When recording your version number you should:</p>\n<ul class=\"simple\">\n<li><a name=\"68b5a8a1df5cec24dd227e2dffc7c652aa6344c4\"></a><p class=\"first cn\" id=\"68b5a8a1df5cec24dd227e2dffc7c652aa6344c4\">Put it within the code, so it's accessible after the package is installed</p>\n</li>\n<li><a name=\"f69ee4f33a6b290a4d9c018da15e09389555e270\"></a><p class=\"first cn\" id=\"f69ee4f33a6b290a4d9c018da15e09389555e270\">Easily retrieve all the individual parts of the version</p>\n</li>\n<li><a name=\"7215861ab51778e5bd10945bd6122c97c4253579\"></a><p class=\"first cn\" id=\"7215861ab51778e5bd10945bd6122c97c4253579\">Record the individual version parts as integers (where appropriate) for easy comparison</p>\n</li>\n<li><a name=\"6df3df8aedc9701b7a18a3f6b7088e77f17fbea5\"></a><p class=\"first cn\" id=\"6df3df8aedc9701b7a18a3f6b7088e77f17fbea5\">Have a properly formatted string version available</p>\n</li>\n</ul>\n<a name=\"0a354c6a516cbb32233a13b52914668a0d77fab0\"></a><p class=\"cn\" id=\"0a354c6a516cbb32233a13b52914668a0d77fab0\">Putting the version information in your application's <tt class=\"docutils literal\"><span class=\"pre\">__init__.py</span></tt> is a great, out-of-the-way place.</p>\n<a name=\"aee435535ad859868e0e23a31112c0e3e024d90b\"></a><p class=\"cn\" id=\"aee435535ad859868e0e23a31112c0e3e024d90b\">Here is an example that I use:</p>\n<dl class=\"docutils\">\n<dt><strong>coolapp/__index__.py</strong></dt>\n<dd><div class=\"first last highlight-python\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span class=\"n\">__version_info__</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s\">&#39;major&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;minor&#39;</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;micro&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;releaselevel&#39;</span><span class=\"p\">:</span> <span class=\"s\">&#39;final&#39;</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;serial&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_version</span><span class=\"p\">():</span>\n    <span class=\"n\">vers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">&quot;</span><span class=\"si\">%(major)i</span><span class=\"s\">.</span><span class=\"si\">%(minor)i</span><span class=\"s\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">__version_info__</span><span class=\"p\">,</span> <span class=\"p\">]</span>\n    \n    <span class=\"k\">if</span> <span class=\"n\">__version_info__</span><span class=\"p\">[</span><span class=\"s\">&#39;micro&#39;</span><span class=\"p\">]:</span>\n        <span class=\"n\">vers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">&quot;.</span><span class=\"si\">%(micro)i</span><span class=\"s\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">__version_info__</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">__version_info__</span><span class=\"p\">[</span><span class=\"s\">&#39;releaselevel&#39;</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s\">&#39;final&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">vers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">&#39;</span><span class=\"si\">%(releaselevel)s%(serial)i</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">__version_info__</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"s\">&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">vers</span><span class=\"p\">)</span>\n\n<span class=\"n\">__version__</span> <span class=\"o\">=</span> <span class=\"n\">get_version</span><span class=\"p\">()</span>\n</pre></div>\n</td></tr></table></div>\n</dd>\n</dl>\n<a name=\"23a889f3cb437a4fbef24b822784a730ee317213\"></a><p class=\"cn\" id=\"23a889f3cb437a4fbef24b822784a730ee317213\">This sets up a <tt class=\"docutils literal\"><span class=\"pre\">__version_info__</span></tt> dictionary to hold the version fields, a <tt class=\"docutils literal\"><span class=\"pre\">get_version()</span></tt> function to format the <tt class=\"docutils literal\"><span class=\"pre\">__version_info__</span></tt> into a string, and <tt class=\"docutils literal\"><span class=\"pre\">__version__</span></tt>, which is the formatted string version. It is similar to Django's method:</p>\n<dl class=\"docutils\">\n<dt><strong>django/__init__.py</strong></dt>\n<dd><div class=\"first last highlight-python\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span class=\"n\">VERSION</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s\">&#39;alpha&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_version</span><span class=\"p\">():</span>\n    <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\">.</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n    <span class=\"k\">if</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span>\n        <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\">.</span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n    <span class=\"k\">if</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:]</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"s\">&#39;alpha&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\"> pre-alpha&#39;</span> <span class=\"o\">%</span> <span class=\"n\">version</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s\">&#39;final&#39;</span><span class=\"p\">:</span>\n            <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">&#39;</span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">VERSION</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">django.utils.version</span> <span class=\"kn\">import</span> <span class=\"n\">get_svn_revision</span>\n    <span class=\"n\">svn_rev</span> <span class=\"o\">=</span> <span class=\"n\">get_svn_revision</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">svn_rev</span> <span class=\"o\">!=</span> <span class=\"s\">u&#39;SVN-unknown&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">&quot;</span><span class=\"si\">%s</span><span class=\"s\"> </span><span class=\"si\">%s</span><span class=\"s\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">svn_rev</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">version</span>\n</pre></div>\n</td></tr></table></div>\n</dd>\n</dl>\n</div>\n</div>\n", "display_toc": true, "title": "Version Reporting", "sourcename": "app_construction/version_reporting.txt", "customsidebar": null, "current_page_name": "app_construction/version_reporting", "next": {"link": "../views_as_a_package/", "title": "Views as a package"}, "rellinks": [["genindex", "General Index", "I", "index"], ["app_construction/views_as_a_package", "Views as a package", "N", "next"], ["app_construction/index", "Application Construction", "P", "previous"]], "meta": {}, "parents": [{"link": "../", "title": "Application Construction"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Version Reporting</a><ul>\n<li><a class=\"reference internal\" href=\"#what-problem-does-this-pattern-solve\">What problem does this pattern solve?</a></li>\n<li><a class=\"reference internal\" href=\"#when-to-use-it\">When to use it</a></li>\n<li><a class=\"reference internal\" href=\"#why-should-i-use-it\">Why should I use it?</a></li>\n<li><a class=\"reference internal\" href=\"#how-to-use-it\">How to use it</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../", "title": "Application Construction"}, "metatags": ""}