{"body": "<div class=\"section\" id=\"configurable-applications\">\n<h1>Configurable Applications<a class=\"headerlink\" href=\"#configurable-applications\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\" id=\"1\">This is just a stub document. It will be fleshed out more. Please don&#8217;t comment on it.</p>\n</div>\n<div class=\"contents local topic\" id=\"contents\">\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"#what-problem-does-this-pattern-solve\" id=\"id1\">What problem does this pattern solve?</a></li>\n<li><a class=\"reference internal\" href=\"#when-to-use-it\" id=\"id2\">When to use it</a></li>\n<li><a class=\"reference internal\" href=\"#implementation\" id=\"id3\">Implementation</a><ul>\n<li><a class=\"reference internal\" href=\"#basic-pattern-with-one-setting\" id=\"id4\">Basic Pattern with one setting</a></li>\n<li><a class=\"reference internal\" href=\"#requiring-a-value-for-a-setting\" id=\"id5\">Requiring a value for a setting</a></li>\n<li><a class=\"reference internal\" href=\"#many-settings-for-your-application\" id=\"id6\">Many settings for your application</a></li>\n<li><a class=\"reference internal\" href=\"#settings-with-nested-dictionaries\" id=\"id7\">Settings with nested dictionaries</a></li>\n<li><a class=\"reference internal\" href=\"#turning-the-keys-into-attributes\" id=\"id8\">Turning the keys into attributes</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#how-to-use-it\" id=\"id9\">How to use it</a></li>\n<li><a class=\"reference internal\" href=\"#sources\" id=\"id10\">Sources</a></li>\n<li><a class=\"reference internal\" href=\"#useful-links\" id=\"id11\">Useful Links</a></li>\n<li><a class=\"reference internal\" href=\"#where-is-it-used\" id=\"id12\">Where is it used?</a></li>\n</ul>\n</div>\n<div class=\"section\" id=\"what-problem-does-this-pattern-solve\">\n<h2><a class=\"toc-backref\" href=\"#id1\">What problem does this pattern solve?</a><a class=\"headerlink\" href=\"#what-problem-does-this-pattern-solve\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p id=\"2\">You want to allow configuration of your app without having to modify its code. You may also want to provide reasonable defaults that users can override.</p>\n</div>\n<div class=\"section\" id=\"when-to-use-it\">\n<h2><a class=\"toc-backref\" href=\"#id2\">When to use it</a><a class=\"headerlink\" href=\"#when-to-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p id=\"3\">Use this whenever project- or implementation-specific information is required at runtime or there are obvious choices or options for the application.</p>\n<p id=\"4\">Good examples:</p>\n<ul class=\"simple\">\n<li>API key</li>\n<li>Debugging flags</li>\n<li>Location(s) to look for files</li>\n<li>Which features should be used (feature flags)</li>\n</ul>\n</div>\n<div class=\"section\" id=\"implementation\">\n<h2><a class=\"toc-backref\" href=\"#id3\">Implementation</a><a class=\"headerlink\" href=\"#implementation\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p id=\"5\">Create a <tt class=\"docutils literal\"><span class=\"pre\">settings.py</span></tt> file in your application</p>\n<div class=\"highlight-python\"><pre>coolapp\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 admin.py\n\u251c\u2500\u2500 models.py\n\u251c\u2500\u2500 settings.py\n\u251c\u2500\u2500 tests.py\n\u2514\u2500\u2500 views.py</pre>\n</div>\n<div class=\"section\" id=\"basic-pattern-with-one-setting\">\n<h3><a class=\"toc-backref\" href=\"#id4\">Basic Pattern with one setting</a><a class=\"headerlink\" href=\"#basic-pattern-with-one-setting\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p id=\"6\">Inside the <tt class=\"docutils literal\"><span class=\"pre\">settings.py</span></tt> file, you will import Django&#8217;s settings and use <tt class=\"docutils literal\"><span class=\"pre\">getattr()</span></tt> to retrieve the value, or use a default value. There are several parts to this:</p>\n<ul class=\"simple\">\n<li><strong>Internal Name:</strong> The name you will use within your application</li>\n<li><strong>Namespaced Name:</strong> The name used in a project&#8217;s <tt class=\"docutils literal\"><span class=\"pre\">settings.py</span></tt>, with a prefix to avoid collisions.</li>\n<li><strong>Default Value:</strong> The value for this setting if the namespaced name is not in the project&#8217;s <tt class=\"docutils literal\"><span class=\"pre\">settings.py</span></tt>.</li>\n</ul>\n<dl class=\"docutils\">\n<dt><strong>coolapp/settings.py</strong></dt>\n<dd><div class=\"first last highlight-python\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1\n2\n3</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"n\">COOL_WORD</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">,</span> <span class=\"s\">&#39;COOLAPP_COOL_WORD&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;cool&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</td></tr></table></div>\n</dd>\n</dl>\n<p id=\"7\">Here, <tt class=\"docutils literal\"><span class=\"pre\">COOL_WORD</span></tt> is the <em>internal name,</em> <tt class=\"docutils literal\"><span class=\"pre\">COOLAPP_COOL_WORD</span></tt> is the <em>namespaced name,</em> and <tt class=\"docutils literal\"><span class=\"pre\">'cool'</span></tt> is the <em>default value.</em></p>\n</div>\n<div class=\"section\" id=\"requiring-a-value-for-a-setting\">\n<h3><a class=\"toc-backref\" href=\"#id5\">Requiring a value for a setting</a><a class=\"headerlink\" href=\"#requiring-a-value-for-a-setting\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p id=\"8\">For something like an API key, you will want to draw attention if it&#8217;s empty. You will do this by raising an <tt class=\"docutils literal\"><span class=\"pre\">ImproperlyConfigured</span></tt> exception.</p>\n<dl class=\"docutils\">\n<dt><strong>coolapp/settings.py</strong></dt>\n<dd><div class=\"first last highlight-python\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>1\n2\n3\n4\n5\n6\n7</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ImproperlyConfigured</span>\n\n<span class=\"n\">API_KEY</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">,</span> <span class=\"s\">&#39;COOLAPP_API_KEY&#39;</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">API_KEY</span> <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"n\">ImproperlyConfigured</span><span class=\"p\">(</span><span class=\"s\">&quot;You haven&#39;t set &#39;COOLAPP_API_KEY&#39;.&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</td></tr></table></div>\n</dd>\n</dl>\n</div>\n<div class=\"section\" id=\"many-settings-for-your-application\">\n<h3><a class=\"toc-backref\" href=\"#id6\">Many settings for your application</a><a class=\"headerlink\" href=\"#many-settings-for-your-application\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p id=\"9\">Django has internally began using dictionaries for groups of settings, such as <tt class=\"docutils literal\"><span class=\"pre\">DATABASES</span></tt>. Django debug toolbar, for example, uses one dictionary to store all its configurations.</p>\n<dl class=\"docutils\">\n<dt><strong>debug_toolbar/toolbar/loader.py</strong></dt>\n<dd><div class=\"first last highlight-python\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">The main DebugToolbar class that loads and renders the Toolbar.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.template.loader</span> <span class=\"kn\">import</span> <span class=\"n\">render_to_string</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">DebugToolbar</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">request</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">panels</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">base_url</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">META</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">&#39;SCRIPT_NAME&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;&#39;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s\">&#39;INTERCEPT_REDIRECTS&#39;</span><span class=\"p\">:</span> <span class=\"bp\">True</span><span class=\"p\">,</span>\n            <span class=\"s\">&#39;MEDIA_URL&#39;</span><span class=\"p\">:</span> <span class=\"s\">u&#39;</span><span class=\"si\">%s</span><span class=\"s\">/__debug__/m/&#39;</span> <span class=\"o\">%</span> <span class=\"n\">base_url</span>\n        <span class=\"p\">}</span>\n        <span class=\"c\"># Check if settings has a DEBUG_TOOLBAR_CONFIG and updated config</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">,</span> <span class=\"s\">&#39;DEBUG_TOOLBAR_CONFIG&#39;</span><span class=\"p\">,</span> <span class=\"p\">{}))</span>\n        \n        <span class=\"c\"># ... more code below</span>\n</pre></div>\n</td></tr></table></div>\n</dd>\n</dl>\n<p id=\"10\">It creates a standard set of configurations in line 13, and then uses the dictionaries <tt class=\"docutils literal\"><span class=\"pre\">update()</span></tt> method in line 18 to add or override current key/values.</p>\n</div>\n<div class=\"section\" id=\"settings-with-nested-dictionaries\">\n<h3><a class=\"toc-backref\" href=\"#id7\">Settings with nested dictionaries</a><a class=\"headerlink\" href=\"#settings-with-nested-dictionaries\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p id=\"11\">If your settings dictionary has a dictionary as a value, you need to take a slightly different approach. <tt class=\"docutils literal\"><span class=\"pre\">dict.update()</span></tt> will completely overwrite the nested dictionaries, not merge them. To make things trickier, <tt class=\"docutils literal\"><span class=\"pre\">dict.update()</span></tt> doesn&#8217;t return a value, so</p>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"n\">DEFAULT_SETTINGS</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">,</span> <span class=\"s\">&#39;FOOBAR_SETTINGS&#39;</span><span class=\"p\">,</span> <span class=\"p\">{}))</span>\n<span class=\"n\">DEFAULT_SETTINGS</span><span class=\"p\">[</span><span class=\"s\">&#39;FOO&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">DEFAULT_FOO</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">DEFAULT_SETTINGS</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">&#39;FOO&#39;</span><span class=\"p\">,</span> <span class=\"p\">{}))</span>\n</pre></div>\n</div>\n<p id=\"12\">leaves <tt class=\"docutils literal\"><span class=\"pre\">DEFAULT_SETTINGS['FOO']</span></tt> with a value of <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>. So lets try something else.</p>\n<dl class=\"docutils\">\n<dt><strong>supertagging/settings.py</strong></dt>\n<dd><div class=\"first last highlight-python\"><table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span class=\"n\">DEFAULT_SETTINGS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s\">&#39;ENABLED&#39;</span><span class=\"p\">:</span> <span class=\"bp\">False</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;DEBUG&#39;</span><span class=\"p\">:</span> <span class=\"bp\">False</span><span class=\"p\">,</span>\n    \n    <span class=\"c\"># ... other settings</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">DEFAULT_MARKUP_SETTINGS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s\">&#39;ENABLED&#39;</span><span class=\"p\">:</span> <span class=\"bp\">False</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;FIELD_SUFFIX&#39;</span><span class=\"p\">:</span> <span class=\"s\">&quot;tagged&quot;</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;EXCLUDE&#39;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n    <span class=\"s\">&#39;CONTENT_CACHE_TIMEOUT&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3600</span><span class=\"p\">,</span>\n    <span class=\"s\">&#39;MIN_RELEVANCE&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">temp_settings</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">,</span> <span class=\"s\">&#39;SUPERTAGGING_SETTINGS&#39;</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n<span class=\"n\">USER_SETTINGS</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">DEFAULT_SETTINGS</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">temp_settings</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">())</span>\n<span class=\"n\">USER_SETTINGS</span><span class=\"p\">[</span><span class=\"s\">&#39;MARKUP&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">DEFAULT_MARKUP_SETTINGS</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">USER_SETTINGS</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">&#39;MARKUP&#39;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</pre></div>\n</td></tr></table></div>\n</dd>\n</dl>\n<p id=\"13\">In this example taken from django-supertagging, line 8 shows the default values for <tt class=\"docutils literal\"><span class=\"pre\">SUPERTAGGING_SETTINGS['MARKUP']</span></tt>. Line 16 retrieves the <tt class=\"docutils literal\"><span class=\"pre\">SUPERTAGGING_SETTINGS</span></tt> dictionary into a temporary variable using <tt class=\"docutils literal\"><span class=\"pre\">getattr</span></tt>.</p>\n<p id=\"14\">Line 17 merges the <tt class=\"docutils literal\"><span class=\"pre\">DEFAULT_SETTINGS</span></tt> dictionary with the dictionary retrieved in line 16 into a new copy. By converting each dictionary into a list of tuple-pairs with the <tt class=\"docutils literal\"><span class=\"pre\">items()</span></tt> method, it can combine them using the <tt class=\"docutils literal\"><span class=\"pre\">+</span></tt> operator. When this list is converted back into a dictionary, it uses the last found key-value pair.</p>\n<p id=\"15\">Lines 18-20 merge the defaults for <tt class=\"docutils literal\"><span class=\"pre\">MARKUP</span></tt> with whatever the user has specified.</p>\n</div>\n<div class=\"section\" id=\"turning-the-keys-into-attributes\">\n<h3><a class=\"toc-backref\" href=\"#id8\">Turning the keys into attributes</a><a class=\"headerlink\" href=\"#turning-the-keys-into-attributes\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p id=\"16\">globals().update(USER_SETTINGS)</p>\n</div>\n</div>\n<div class=\"section\" id=\"how-to-use-it\">\n<h2><a class=\"toc-backref\" href=\"#id9\">How to use it</a><a class=\"headerlink\" href=\"#how-to-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"sources\">\n<h2><a class=\"toc-backref\" href=\"#id10\">Sources</a><a class=\"headerlink\" href=\"#sources\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"useful-links\">\n<h2><a class=\"toc-backref\" href=\"#id11\">Useful Links</a><a class=\"headerlink\" href=\"#useful-links\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"where-is-it-used\">\n<h2><a class=\"toc-backref\" href=\"#id12\">Where is it used?</a><a class=\"headerlink\" href=\"#where-is-it-used\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n</div>\n", "display_toc": true, "title": "Configurable Applications", "sourcename": "configuration/configure_app.txt", "customsidebar": null, "current_page_name": "configuration/configure_app", "next": {"link": "../../decorator_apps/", "title": "Decorator App Patterns"}, "rellinks": [["genindex", "General Index", "I", "index"], ["decorator_apps/index", "Decorator App Patterns", "N", "next"], ["configuration/autodiscovery", "Autodiscovery", "P", "previous"]], "meta": {"author": "Corey Oordt"}, "parents": [{"link": "../", "title": "Configuration Patterns"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Configurable Applications</a><ul>\n<li><a class=\"reference internal\" href=\"#what-problem-does-this-pattern-solve\">What problem does this pattern solve?</a></li>\n<li><a class=\"reference internal\" href=\"#when-to-use-it\">When to use it</a></li>\n<li><a class=\"reference internal\" href=\"#implementation\">Implementation</a><ul>\n<li><a class=\"reference internal\" href=\"#basic-pattern-with-one-setting\">Basic Pattern with one setting</a></li>\n<li><a class=\"reference internal\" href=\"#requiring-a-value-for-a-setting\">Requiring a value for a setting</a></li>\n<li><a class=\"reference internal\" href=\"#many-settings-for-your-application\">Many settings for your application</a></li>\n<li><a class=\"reference internal\" href=\"#settings-with-nested-dictionaries\">Settings with nested dictionaries</a></li>\n<li><a class=\"reference internal\" href=\"#turning-the-keys-into-attributes\">Turning the keys into attributes</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#how-to-use-it\">How to use it</a></li>\n<li><a class=\"reference internal\" href=\"#sources\">Sources</a></li>\n<li><a class=\"reference internal\" href=\"#useful-links\">Useful Links</a></li>\n<li><a class=\"reference internal\" href=\"#where-is-it-used\">Where is it used?</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../autodiscovery/", "title": "Autodiscovery"}, "metatags": ""}